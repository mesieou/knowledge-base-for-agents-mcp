name: Deploy to Kamatera

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh/
        # Write SSH key with proper line endings
        printf '%s\n' "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        # Write known hosts
        printf '%s\n' "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        # Verify key format
        echo "Testing SSH key format..."
        ssh-keygen -l -f ~/.ssh/deploy_key
        # Start SSH agent and add key
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/deploy_key
        echo "SSH setup complete"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}

    - name: Deploy to Kamatera
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no root@45.151.154.42 << 'EOF'
        set -e  # Exit on any error
        echo "🚀 Starting deployment..."

        # Stop existing container
        echo "⏹️ Stopping existing containers..."
        docker stop knowledge-base-mcp || true
        docker rm knowledge-base-mcp || true

        # Remove old images to save space
        docker image prune -f || true

        # Pull latest code (build directly on Kamatera)
        echo "📥 Pulling latest code..."
        if [ -d "/root/knowledge-base-for-agents-mcp" ]; then
          cd /root/knowledge-base-for-agents-mcp
          git pull origin master
        else
          git clone https://github.com/mesieou/knowledge-base-for-agents-mcp.git /root/knowledge-base-for-agents-mcp
          cd /root/knowledge-base-for-agents-mcp
        fi

        # Build and run on Kamatera (no tar files needed)
        echo "🔨 Building Docker image..."
        docker build -t knowledge-base-mcp .

        echo "🚀 Starting new container..."

        # Create .env file with secrets
        cat > .env << ENVEOF
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
        BUSINESS_ID=${{ secrets.BUSINESS_ID }}
        ENVEOF

        docker run -d -p 8000:8000 \
          --env-file .env \
          --name knowledge-base-mcp \
          --restart unless-stopped \
          knowledge-base-mcp:latest

        echo "✅ Deployment completed successfully!"

        # Verify the container is running
        sleep 5
        if docker ps | grep -q knowledge-base-mcp; then
          echo "✅ Container is running"
          docker logs --tail 10 knowledge-base-mcp
        else
          echo "❌ Container failed to start"
          docker logs knowledge-base-mcp
          exit 1
        fi
        EOF
